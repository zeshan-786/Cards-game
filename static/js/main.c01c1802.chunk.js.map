{"version":3,"sources":["Components/UI/ContentView/ContentView.js","Components/UI/Spinner/Spinner.js","Components/UI/Notification/Notification.js","Components/Controls/Controls.js","Components/Player/PlayerDetails.js","Components/Player/Player.js","Components/Player/Players.js","Components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBarSpacer","mixins","toolbar","content","flexGrow","height","minHeight","overflow","container","paddingTop","spacing","paddingBottom","ContentView","props","classes","_jsxs","className","children","_jsx","Container","maxWidth","Grid","Spinner","Alert","MuiAlert","elevation","variant","Notification","_ref","message","severity","open","setOpen","useState","handleClose","event","reason","Snackbar","autoHideDuration","onClose","paper","padding","display","flexDirection","fixedHeight","Controls","selectedPlayer","sortByOrder","sortingOrder","fixedHeightPaper","clsx","loading","setLoading","notify","setNotify","submitButton","item","xs","md","lg","Button","color","disabled","fullWidth","onClick","fetch","method","headers","body","JSON","stringify","then","res","Paper","Typography","align","PlayerDetails","player","playerName","realName","asset","style","width","textAlign","margin","gutterBottom","Divider","Player","selectPlayer","active","Card","raised","CardActionArea","CardContent","noWrap","Players","players","setSelectedPlayer","map","id","Layout","setPlayers","setSortingOrder","useEffect","async","response","json","fetchPlayers","sortOrder","newPlayersOrder","sort","a","b","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c01c1802.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    minHeight: 1200,\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst ContentView = (props) => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.content}>\n      <div className={classes.appBarSpacer} />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3}>\n          {props.children}\n        </Grid>\n      </Container>\n    </main>\n  );\n};\n\nexport default ContentView;\n","import React from \"react\";\n\nimport \"./Spinner.css\";\n\nconst Spinner = () => <div className=\"Loader\">Loading...</div>;\n\nexport default Spinner;\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Notification = ({ message, severity }) => {\n  const [open, setOpen] = useState(true);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={severity}>\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Notification from \"../UI/Notification/Notification\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 300,\n  },\n}));\n\nconst Controls = ({ selectedPlayer, sortByOrder, sortingOrder }) => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [loading, setLoading] = useState(false);\n  const [notify, setNotify] = useState(false);\n\n  const handleSubmit = () => {\n    setLoading(true);\n    setNotify(false);\n    fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"post\",\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n      body: JSON.stringify(selectedPlayer),\n    }).then((res) => {\n      setLoading(false);\n      setNotify(true);\n    });\n  };\n\n  const submitButton = (\n    <Grid item xs={12} md={12} lg={12} spacing={3}>\n      <Button\n        variant=\"outlined\"\n        color=\"default\"\n        disabled={!selectedPlayer}\n        fullWidth\n        onClick={() => handleSubmit()}\n      >\n        Submit\n      </Button>\n    </Grid>\n  );\n\n  return (\n    <Grid item xs={12} md={4} lg={4}>\n      <Paper className={fixedHeightPaper}>\n        <Typography variant=\"h5\" align=\"center\" color=\"primary\">\n          Controls\n        </Typography>\n        <br></br>\n        <Grid container spacing={3}>\n          <Grid item xs={6} md={6} lg={6} spacing={3}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => sortByOrder('Asc')}\n              disabled={sortingOrder && sortingOrder === 'Asc'}\n              fullWidth\n            >\n              Sort ASC\n            </Button>\n          </Grid>\n          <Grid item xs={6} md={6} lg={6} spacing={3}>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => sortByOrder('Desc')}\n              disabled={sortingOrder && sortingOrder === 'Desc'}\n              fullWidth\n            >\n              Sort DESC\n            </Button>\n          </Grid>\n          {notify ? (\n            <Notification\n              message={\"user successfully updated!\"}\n              severity={\"info\"}\n            />\n          ) : (\n            \"\"\n          )}\n          {loading ? <Spinner /> : submitButton}\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Controls;\n","import { Divider, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst PlayerDetails = ({ player }) => {\n  const { playerName, realName, asset } = player;\n\n  return (\n    <div\n      style={{\n        width: \"90%\",\n        textAlign: \"center\",\n        margin: \"auto\",\n      }}\n    >\n      <Typography gutterBottom variant=\"h5\">\n        {playerName ? playerName : \"\"}\n      </Typography>\n      <Typography variant=\"subtitle1\">{realName ? realName : \"\"}</Typography>\n      <Divider />\n      <br />\n      <Typography variant=\"body1\">{asset ? asset : \"\"}</Typography>\n    </div>\n  );\n};\n\nexport default PlayerDetails;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Divider } from \"@material-ui/core\";\n\nconst Player = ({ player, selectPlayer, active }) => {\n  const { playerName, realName, asset } = player;\n  return (\n    <Grid item xs={4} md={4} lg={4} onClick={() => selectPlayer(player)}>\n      <Card raised={active}>\n        <CardActionArea>\n          <CardContent>\n            <Typography gutterBottom variant=\"h6\" noWrap>\n              {playerName}\n            </Typography>\n            <Typography variant=\"subtitle1\" noWrap>\n              {realName}\n            </Typography>\n            <Divider />\n            <br />\n            <Typography variant=\"body2\" color=\"textSecondary\" noWrap>\n              {asset}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Player from \"./Player\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Players = ({ players, setSelectedPlayer, selectedPlayer }) => {\n  return players ? (\n    <Grid container spacing={3}>\n      {players.map((player) => (\n        <Player\n          key={player.id}\n          player={player}\n          selectPlayer={(player) => setSelectedPlayer(player)}\n          active={selectedPlayer && player.id === selectedPlayer.id}\n        />\n      ))}\n    </Grid>\n  ) : (\n    <Typography gutterBottom variant=\"h5\">\n      No player found\n    </Typography>\n  );\n};\n\nexport default Players;","import React, { useEffect, useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ContentView from \"./UI/ContentView/ContentView\";\nimport { Typography } from \"@material-ui/core\";\n\nimport Controls from \"./Controls/Controls\";\nimport PlayerDetails from \"./Player/PlayerDetails\";\nimport Players from \"./Player/Players\";\nimport Spinner from \"./UI/Spinner/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 300,\n  },\n}));\n\nconst Layout = () => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [players, setPlayers] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sortingOrder, setSortingOrder] = useState(\"\");\n\n  async function fetchPlayers() {\n    const response = await fetch(\"./PlayersData.json\");\n    const json = await response.json();\n    setPlayers(json);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchPlayers();\n  }, []);\n\n  const sortByOrder = (sortOrder) => {\n    const newPlayersOrder =\n      sortOrder === \"Asc\"\n        ? players.sort((a, b) => (a.playerName > b.playerName ? 1 : -1))\n        : players.sort((a, b) => (a.playerName < b.playerName ? 1 : -1));\n    setPlayers(newPlayersOrder);\n    setSortingOrder(sortOrder);\n  };\n\n  if (loading) return <Spinner />;\n\n  return (\n    <ContentView>\n      {selectedPlayer && (\n        <Grid item xs={12} md={8} lg={8}>\n          <Paper className={fixedHeightPaper}>\n            <Typography variant=\"h5\" align=\"center\" color=\"primary\">\n              Details\n            </Typography>\n            <PlayerDetails player={selectedPlayer} />\n          </Paper>\n        </Grid>\n      )}\n      <Controls sortByOrder={sortByOrder} selectedPlayer={selectedPlayer} sortingOrder={sortingOrder} />\n      <Grid item xs={12} md={12} lg={12}>\n        <Paper>\n          <Typography variant=\"h5\" align=\"center\" color=\"primary\">\n            Overview\n          </Typography>\n          <Players\n            players={players}\n            selectedPlayer={selectedPlayer}\n            setSelectedPlayer={setSelectedPlayer}\n          />\n        </Paper>\n      </Grid>\n    </ContentView>\n  );\n};\n\nexport default Layout;\n","import \"./App.css\";\nimport Layout from \"./Components/Layout\";\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}